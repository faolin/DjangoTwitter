{"version":3,"sources":["webpack:///./node_modules/ngx-tweet/fesm5/ngx-tweet.js","webpack:///./src/app/services/django.service.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyD;AACiG;AACxH;;AAElC;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,+CAAU;AACzB;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,wDAAU,EAAE;AAC5B;AACA;AACA,kDAAkD;AAClD,SAAS,gCAAgC,OAAO,oDAAM,SAAS,wDAAQ,IAAI,IAAI;AAC/E,MAAM;AACN;AACA,CAAC;;AAED;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8FAA8F;AAC9F,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA,8CAA8C,4BAA4B,EAAE;AAC5E,mCAAmC,+DAAiB;AACpD,qCAAqC,qEAAuB;AAC5D,iBAAiB,IAAI;AACrB;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","file":"app-pages-annotate-tweets-annotate-tweets-module~app-pages-dashboard-dashboard-module.js","sourcesContent":["import { DOCUMENT, CommonModule } from '@angular/common';\nimport { Inject, Injectable, ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Input, ViewEncapsulation, NgModule } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar NgxTweetService = /** @class */ (function () {\n    function NgxTweetService(_document) {\n        this._document = _document;\n        this.TWITTER_OBJECT = 'twttr';\n        this.TWITTER_SCRIPT_ID = 'twitter-wjs';\n        this.TWITTER_WIDGET_URL = 'https://platform.twitter.com/widgets.js';\n    }\n    /**\n     * @return {?}\n     */\n    NgxTweetService.prototype.loadScript = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        return Observable.create(function (observer) {\n            _this._startScriptLoad();\n            _this._document.defaultView[_this.TWITTER_OBJECT].ready(_this._onTwitterScriptLoadedFactory(observer));\n        });\n    };\n    /**\n     * @return {?}\n     */\n    NgxTweetService.prototype._startScriptLoad = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ twitterData = this._document.defaultView[this.TWITTER_OBJECT] || {};\n        if (this._twitterScriptAlreadyExists()) {\n            this._document.defaultView[this.TWITTER_OBJECT] = twitterData;\n            return;\n        }\n        this._appendTwitterScriptToDOM();\n        twitterData._e = [];\n        twitterData.ready = function (callback) {\n            twitterData._e.push(callback);\n        };\n        this._document.defaultView[this.TWITTER_OBJECT] = twitterData;\n    };\n    /**\n     * @return {?}\n     */\n    NgxTweetService.prototype._twitterScriptAlreadyExists = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ twitterScript = this._document.getElementById(this.TWITTER_SCRIPT_ID);\n        return (twitterScript !== null || typeof twitterScript !== 'object');\n    };\n    /**\n     * @return {?}\n     */\n    NgxTweetService.prototype._appendTwitterScriptToDOM = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ firstJSScript = this._document.getElementsByTagName('script')[0];\n        var /** @type {?} */ js = this._document.createElement('script');\n        js.id = this.TWITTER_SCRIPT_ID;\n        js.src = this.TWITTER_WIDGET_URL;\n        firstJSScript.parentNode.insertBefore(js, firstJSScript);\n    };\n    /**\n     * @param {?} observer\n     * @return {?}\n     */\n    NgxTweetService.prototype._onTwitterScriptLoadedFactory = /**\n     * @param {?} observer\n     * @return {?}\n     */\n    function (observer) {\n        return function (twitterData) {\n            observer.next(twitterData);\n            observer.complete();\n        };\n    };\n    NgxTweetService.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    NgxTweetService.ctorParameters = function () { return [\n        { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] },] },\n    ]; };\n    return NgxTweetService;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar NgxTweetComponent = /** @class */ (function () {\n    function NgxTweetComponent(_elementRef, _ngxTweetService, _changeDetectorRef) {\n        this._elementRef = _elementRef;\n        this._ngxTweetService = _ngxTweetService;\n        this._changeDetectorRef = _changeDetectorRef;\n        this.isTwitterScriptLoading = true;\n    }\n    /**\n     * @return {?}\n     */\n    NgxTweetComponent.prototype.ngOnInit = /**\n     * @return {?}\n     */\n    function () {\n        this._loadTwitterScript();\n    };\n    /**\n     * @return {?}\n     */\n    NgxTweetComponent.prototype._loadTwitterScript = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this._ngxTweetService\n            .loadScript()\n            .subscribe(function (twitterData) {\n            _this._updateTwitterScriptLoadingState();\n            twitterData.widgets.createTweet(_this.tweetId, _this._elementRef.nativeElement, {});\n        });\n    };\n    /**\n     * @return {?}\n     */\n    NgxTweetComponent.prototype._updateTwitterScriptLoadingState = /**\n     * @return {?}\n     */\n    function () {\n        this.isTwitterScriptLoading = false;\n        this._changeDetectorRef.detectChanges();\n    };\n    NgxTweetComponent.decorators = [\n        { type: Component, args: [{\n                    selector: 'ngx-tweet',\n                    template: '<ng-content *ngIf=\"isTwitterScriptLoading\"></ng-content>',\n                    styles: ['.twitter-tweet { transform: none !important; }'],\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                },] },\n    ];\n    /** @nocollapse */\n    NgxTweetComponent.ctorParameters = function () { return [\n        { type: ElementRef, },\n        { type: NgxTweetService, },\n        { type: ChangeDetectorRef, },\n    ]; };\n    NgxTweetComponent.propDecorators = {\n        \"tweetId\": [{ type: Input },],\n    };\n    return NgxTweetComponent;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar NgxTweetModule = /** @class */ (function () {\n    function NgxTweetModule() {\n    }\n    NgxTweetModule.decorators = [\n        { type: NgModule, args: [{\n                    declarations: [\n                        NgxTweetComponent\n                    ],\n                    imports: [CommonModule],\n                    exports: [NgxTweetComponent],\n                    providers: [NgxTweetService]\n                },] },\n    ];\n    return NgxTweetModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\nexport { NgxTweetModule, NgxTweetComponent as ɵa, NgxTweetService as ɵb };\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs/Observable';\nimport { environment } from '../../environments/environment';\nimport { mergeMap, map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DjangoService {\n  constructor(private http: HttpClient) {}\n\n  /**\n   * @description envoie des mots clés et l'adresse de l'utisateur (peut également envoyer le nom d'un modéle qu'il souhaite utiliser\n   * a un serveur django pour que celui ci\n   * démarre un stream connecté a twitter recupérant des tweets\n   * contenant ces mots clés\n   * @param keywords\n   * @param emailUser\n   * @param nameOfTheModel\n   */\n  public startStream(keywords, emailUser, nameOfTheModel): Observable<any> {\n    const data = {\n      keywords: keywords,\n      user: emailUser,\n      nameOfTheModel: nameOfTheModel\n    };\n    const url = environment.urlDjango + 'startStream';\n    return this.http.post(url, data);\n  }\n  /**\n   * @description envoie une requête au serveur django pour arréter le stream en cours\n   */\n  public stopStream(): Observable<any> {\n    const url = environment.urlDjango + 'stopStream';\n    return this.http.get(url);\n  }\n  /**\n   * @description supprime les tweets de la base de données\n   */\n  public deleteDbTweets(emailUser): Observable<any> {\n    const data = {\n      user: emailUser\n    };\n    const url = environment.urlDjango + 'deleteTweets';\n    return this.http.post(url, data);\n  }\n  /**\n   * @description permet de lancer la requête permettant de stop le stream avant celle permettant de le démarrer\n   * @param keywords\n   * @param emailUser\n   * @param nameOfTheModel\n   */\n  stopAndStartStream(\n    keywords,\n    emailUser,\n    nameOfTheModel\n  ): Observable<Response> {\n    return this.stopStream().pipe(\n      mergeMap(() => {\n        return this.startStream(keywords, emailUser, nameOfTheModel);\n      })\n    );\n  }\n  /**\n   * @description permet de lancer la requête permettant de stop le stream, supprimer les tweets de la base\n   *  puis relancer le stream\n   * @param keywords\n   * @param emailUser\n   * @param nameOfTheModel\n   */\n  stopDeleteDbTweetsAndStartStream(\n    keywords,\n    emailUser,\n    nameOfTheModel\n  ): Observable<Response> {\n    return this.stopStream().pipe(\n      mergeMap(() => {\n        return this.deleteDbTweets(emailUser).pipe(\n          mergeMap(() => {\n            return this.startStream(keywords, emailUser, nameOfTheModel);\n          })\n        );\n      })\n    );\n  }\n  /**\n   * @description envoie une requête au serveur django avec l'email de l'utilisateur pour récupérer sa liste de mots clés actifs\n   */\n  public getAllActiveKeywords(emailUser): Observable<any> {\n    const data = {\n      user: emailUser\n    };\n    const url = environment.urlDjango + 'getActiveKeywords';\n    return this.http.post(url, data);\n  }\n  /**\n   * @description envoie une requête au serveur django pour récupérer le dernier tweet non annoté\n   */\n  public getLastTweet(emailUser): Observable<any> {\n    const data = {\n      user: emailUser\n    };\n    const url = environment.urlDjango + 'getLastTweet';\n    return this.http.post(url, data);\n  }\n  /**\n   * @description envoie une requête au serveur django avec l'id et l'annotation donnée par l'utilisateur d'un tweet\n   * @param id\n   * @param annotation\n   */\n  public annotateTweet(id, annotation): Observable<any> {\n    const data = {\n      id: id,\n      interesting: annotation\n    };\n    const url = environment.urlDjango + 'annotateTweet';\n    return this.http.post(url, data);\n  }\n  /**\n   * @description récupére le nombre de tweets annotés par l'utilisateur\n   */\n  public getNbrTweetsAnnoted(emailUser): Observable<any> {\n    const data = {\n      user: emailUser\n    };\n    const url = environment.urlDjango + 'getNbrTweetsAnnoted';\n    return this.http.post(url, data);\n  }\n  /**\n   * @description récupére les scores de l'accuracy, precision et rappel, calculés sur les tweets qu'a annoté l'utilisateur\n   */\n  public calculateApprentissage(emailUser): Observable<any> {\n    const data = {\n      user: emailUser\n    };\n    const url = environment.urlDjango + 'calculateApprentissage';\n    return this.http.post(url, data);\n  }\n  /**\n   * @description save le model d'apprentissage\n   */\n  public saveModel(nameOfTheModel, userEmail): Observable<any> {\n    const data = {\n      name: nameOfTheModel,\n      user: userEmail\n    };\n    const url = environment.urlDjango + 'saveModel';\n    return this.http.post(url, data);\n  }\n  /**\n   * @description get les model d'apprentissage d'un utilisateur grâce a son email\n   */\n  public getModels(userEmail): Observable<any> {\n    const data = {\n      user: userEmail\n    };\n    const url = environment.urlDjango + 'getModels';\n    return this.http.post(url, data);\n  }\n  /**\n   * @description get le model d'apprentissage actif d'un utilisateur grâce a son email\n   */\n  public getActifModel(userEmail): Observable<any> {\n    const data = {\n      user: userEmail\n    };\n    const url = environment.urlDjango + 'getActifModel';\n    return this.http.post(url, data);\n  }\n  /**\n   * @description change le modéle actif d'un utilisateur grâce a son email\n   * @param userEmail\n   * @param nameOfTheModel\n   */\n  public changeActifModel(userEmail, nameOfTheModel): Observable<any> {\n    const data = {\n      user: userEmail,\n      nameOfTheModel: nameOfTheModel\n    };\n    const url = environment.urlDjango + 'changeActifModel';\n    return this.http.post(url, data);\n  }\n}\n"],"sourceRoot":""}